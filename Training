palindrome or not using string
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter a number:");
        String str = sc.nextLine();
        String reverse = "";
        int length = str.length();
        for( int i = length - 1; i >= 0; i--){
            reverse += str.charAt(i);
        }
        if( str.equalsIgnoreCase(reverse)){
            System.out.println(str + " is a palindrome");
        } else {
            System.out.println( str + " is not a palindrome");
        }
        sc.close();
    }
}

palindrome using string builder
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a string: ");
        String input = scanner.nextLine();
        boolean isPalindrome = checkPalindrome(input);
        if (isPalindrome) {
            System.out.println("The string \"" + input + "\" is a palindrome.");
        } else {
            System.out.println("The string \"" + input + "\" is not a palindrome.");
        }
        
        scanner.close();
    }

    public static boolean checkPalindrome(String str) {
        StringBuilder builder = new StringBuilder(str);
        String reversedStr = builder.reverse().toString();
        return str.equals(reversedStr);
    }
}

palindrome using string buffer
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a string: ");
        String input = scanner.nextLine();
        boolean isPalindrome = checkPalindrome(input);
        if (isPalindrome) {
            System.out.println("The string \"" + input + "\" is a palindrome.");
        } else {
            System.out.println("The string \"" + input + "\" is not a palindrome.");
        }
        
        scanner.close();
    }

    public static boolean checkPalindrome(String str) {
        StringBuffer buffer = new StringBuffer(str);
        String reversedStr = buffer.reverse().toString();
        return str.equals(reversedStr);
    }
}

without builtin function
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a string: ");
        String input = scanner.nextLine();
        boolean isPalindrome = checkPalindrome(input);
        if (isPalindrome) {
            System.out.println("The string \"" + input + "\" is a palindrome.");
        } else {
            System.out.println("The string \"" + input + "\" is not a palindrome.");
        }
        
        scanner.close();
    }

    public static boolean checkPalindrome(String str) {
        int left = 0; 
        int right = str.length() - 1; 
        while (left < right) {
            if (str.charAt(left) != str.charAt(right)) {
                return false;
            }
            left++; 
            right--; 
        }
        return true;
    }
}

Extract a substring from string object
import java.util.Scanner;
class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a string: ");
        String str = sc.nextLine();
        System.out.print("Enter the starting index: ");
        int start = sc.nextInt();

        System.out.print("Enter the ending index: ");
        int end = sc.nextInt();
        if (start < 0 || end > str.length() || start > end) {
            System.out.println("Invalid indices! Please enter valid start and end values.");
        } else {
            String subStr = str.substring(start, end);
            System.out.println("Extracted Substring: " + subStr);
        }

        sc.close();
    }
}

Extract a substring from stringbuilder object
import java.util.Scanner;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        System.out.print("Enter a string: ");
        String str = sc.nextLine();
        
        System.out.print("Enter the starting index: ");
        int start = sc.nextInt();
        
        System.out.print("Enter the ending index: ");
        int end = sc.nextInt();

        if (start < 0 || end > str.length() || start > end) {
            System.out.println("Invalid indices");
        } else {
            StringBuilder sb = new StringBuilder(str);
            String subStr = sb.substring(start, end);  
            System.out.println("Extracted Substring: " + subStr);
        }
        
        sc.close();
    }
}

Extract a substring using stringbuffer
import java.util.Scanner;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        System.out.print("Enter a string: ");
        String str = sc.nextLine();
        
        System.out.print("Enter the starting index: ");
        int start = sc.nextInt();
        
        System.out.print("Enter the ending index: ");
        int end = sc.nextInt();

        if (start < 0 || end > str.length() || start > end) {
            System.out.println("Invalid indices! Please enter valid start and end values.");
        } else {
            StringBuffer sb = new StringBuffer(str);
            String subStr = sb.substring(start, end);  
            System.out.println("Extracted Substring: " + subStr);
        }
        
        sc.close();
    }
}

Reverse the word order using string
public class Main {
    public static void main(String[] args) {
        String input = "I Love Java Programming";
        String[] words = input.split(" ");
        StringBuilder reversed = new StringBuilder();

        for (int i = words.length - 1; i >= 0; i--) {
            reversed.append(words[i]).append(" ");
        }

        System.out.println(reversed.toString().trim());
    }
}

t6hj7ui coding mart
public class Main
{
	public static void main(String[] args) {
	    String input="t6hj7ui"
	    StringBuilder output=new StringBuilder();
	    for(int i=0;i<input.length();i++){
	        char ch=input.charAt(i);
	        if(Chracter.isDigit(ch)){
	            int repeatCount=Character.getNumericValue(ch);
	            for(int j=0;j<repeatCount;j++){
	                output.append(previousChar);
	            }
	        }else{
	            output.append(ch);
	        }
	    }
		System.out.println(output.toString());
	}
}

